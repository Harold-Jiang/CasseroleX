@using CasseroleX.Application.Configurations.Queries;
@inject IOptionsSnapshot<AppOptions> app
@model List<ConfigListDto>
<style type="text/css">
    @@media (max-width: 375px) {
        .edit-form tr td input {
            width: 100%;
        }

        .edit-form tr th:first-child, .edit-form tr td:first-child {
            width: 20%;
        }

        .edit-form tr th:nth-last-of-type(-n+2), .edit-form tr td:nth-last-of-type(-n+2) {
            display: none;
        }
    }

    .edit-form table > tbody > tr td a.btn-delcfg {
        visibility: hidden;
    }

    .edit-form table > tbody > tr:hover td a.btn-delcfg {
        visibility: visible;
    }

    @@media (max-width: 767px) {
        .edit-form table tr th:nth-last-child(-n + 2), .edit-form table tr td:nth-last-child(-n + 2) {
            display: none;
        }

        .edit-form table tr td .msg-box {
            display: none;
        }
    }
</style>
<div class="panel panel-default panel-intro">
    <div class="panel-heading">
        @await Component.InvokeAsync("BuildHeading")
        <ul class="nav nav-tabs">
            @foreach (var vo in Model)
            {
                 <li class="@(vo.Active?"active":"")"><a href="#tab-@{@vo.Name}" data-toggle="tab">@vo.Title</a></li>
            }
            @if(app.Value.AppDebug)
            {
                <li data-toggle="tooltip" title="Add new config">
                 <a href="#addcfg" data-toggle="tab"><i class="fa fa-plus"></i></a>
                </li>
            }
        </ul>
    </div>

    <div class="panel-body">
        <div id="myTabContent" class="tab-content">
            @Html.AntiForgeryToken() 
            <!--@@formatter:off-->
            @foreach (var sysconfig in Model)
            {<div class="tab-pane @(sysconfig.Active?"active":"fade")" id="tab-@(sysconfig.Name)">
                <div class="widget-body no-padding">
                    <form id="@(sysconfig.Name)-form" class="edit-form form-horizontal" role="form" data-toggle="validator" method="POST" asp-action="edit" asp-controller="config">
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th width="15%">Title</th>
                                <th width="68%">Value</th>
                                @if(app.Value.AppDebug)
                                {
                                    <th width="15%">Name</th>
                                    <th width="2%"></th>
                                }
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in sysconfig!.List)
                            {
                                <tr data-favisible="@item.Visible" data-name="@item.Name" class="@(!string.IsNullOrEmpty(item.Visible)?"hidden":"")">
                                <td>@item.Title</td>
                                <td>
                                    <div class="row">
                                        <div class="col-sm-8 col-xs-12">
                        @{

                            var content = new List<string>();
                            if (!string.IsNullOrEmpty(item.Content))
                            {
                                try{content = JsonSerializer.Deserialize<List<string>>(item.Content);}
                                catch { content = new List<string>(); }
                            }
                        }
                                            @switch(item.Type)
                                            {
case "string":
    <input @item.Extend type="text" name="@item.Name" value="@item.Value" class="form-control" data-rule="@item.Rule" data-tip="@item.Tip"/>
    break;
case "password":
    <input @item.Extend type="password" name="@item.Name" value="@item.Value" class="form-control" data-rule="@item.Rule" data-tip="@item.Tip"/>
    break;
case "text":
    <textarea @item.Extend name="@item.Name" class="form-control" data-rule="@item.Rule" rows="5" data-tip="@item.Tip">@item.Value</textarea>
    break;
case "editor":
    <textarea @item.Extend name="@item.Name" id="editor-@{@item.Name}" class="form-control editor" data-rule="@item.Rule" rows="5" data-tip="@item.Tip">@item.Value</textarea>
    break;
case "array":
    {
        <dl @item.Extend class="fieldlist" data-name="@item.Name">
            <dd>
                <ins>"Field title"</ins>
                <ins>"Field value"</ins>
            </dd>
            <dd><a href="javascript:;" class="btn btn-sm btn-success btn-append"><i class="fa fa-plus"></i> Append</a></dd>
            <textarea name="@item.Name" class="form-control hide" cols="30" rows="5">@item.Value</textarea>
        </dl>
    }
break;
case "date":
    <input @item.Extend type="text" name="@item.Name" value="@item.Value" class="form-control datetimepicker" data-date-format="YYYY-MM-DD" data-tip="@item.Tip" data-rule="@item.Rule"/>
    break;
case "time":
    <input @item.Extend type="text" name="@item.Name" value="@item.Value" class="form-control datetimepicker" data-date-format="HH:mm:ss" data-tip="@item.Tip" data-rule="@item.Rule"/>
    break;
case "datetime":
    <input @item.Extend type="text" name="@item.Name" value="@item.Value" class="form-control datetimepicker" data-date-format="YYYY-MM-DD HH:mm:ss" data-tip="@item.Tip" data-rule="@item.Rule"/>
    break;
case "datetimerange":
    <input @item.Extend type="text" name="@item.Name" value="@item.Value" class="form-control datetimerange" data-tip="@item.Tip" data-rule="@item.Rule"/>
    break;
case "number":
    <input @item.Extend type="number" name="@item.Name" value="@item.Value" class="form-control" data-tip="@item.Tip" data-rule="@item.Rule"/>
    break;
case "checkbox":
    {
     <div class="checkbox">
        @for (int i = 0; i < content.Count; i++)
        {<label for="@(item.Name)[]-@(i)"><input id="@(item.Name)[]-@(i)" name="@(item.Name)[]" type="checkbox" value="@(i)" data-tip="@item.Tip" @(item.Value == content[i]? "checked":"") /> @content[i]</label>
        }
    </div>
    }
break;
case "radio":
    {
        <div class="radio">
          @for (int i = 0; i < content.Count; i++)
        {<label for="@(item.Name)[]-@(i)"><input id="@(item.Name)[]-@(i)" name="@(item.Name)[]" type="radio" value="@(i)" data-tip="@item.Tip" @(item.Value == content[i]? "checked":"") /> @content[i]</label>
        } 
        </div>
    }
    break;
case "select":
case "selects":
    {
        <select @item.Extend name="@item.Name@(item.Type=="selects"?"[]":"")" class="form-control selectpicker" data-tip="@item.Tip" @(item.Type=="selects"?"multiple":"")>
        @for (int i = 0; i < content.Count; i++)
        {   if(item.Value == content[i])
            {
                <option value="@i"  selected>@content[i]</option>
            }else{
                <option value="@i">@content[i]</option>
            }
        }
        </select>
    }
    break;
case "image":
case "images":
    {
     <div class="form-inline">
        <input id="c-@{@item.Name}" class="form-control" size="50" name="@item.Name" type="text" value="@item.Value" data-tip="@item.Tip">
        <span><button type="button" id="faupload-@{@item.Name}" class="btn btn-danger faupload" data-input-id="c-@{@item.Name}" data-mimetype="image/gif,image/jpeg,image/png,image/jpg,image/bmp,image/webp" data-multiple="@(item.Type=="image"?"false":"true")" data-preview-id="p-@{@item.Name}"><i class="fa fa-upload"></i> Upload</button></span>
        <span><button type="button" id="fachoose-@{@item.Name}" class="btn btn-primary fachoose" data-input-id="c-@{@item.Name}" data-mimetype="image/*" data-multiple="@(item.Type=="image"?"false":"true")"><i class="fa fa-list"></i> Choose</button></span>
        <span class="msg-box n-right" for="c-@{@item.Name}"></span>
        <ul class="row list-inline faupload-preview" id="p-@{@item.Name}"></ul>
    </div>
    }
    break;
case "file":
case "files":
    {
     <div class="form-inline">
        <input id="c-@{@item.Name}" class="form-control" size="50" name="@item.Name" type="text" value="@item.Value" data-tip="@item.Tip">
        <span><button type="button" id="faupload-@{@item.Name}" class="btn btn-danger faupload" data-input-id="c-@{@item.Name}" data-multiple="@(item.Type=="file"?"false":"true")"><i class="fa fa-upload"></i> Upload</button></span>
      <span><button type="button" id="fachoose-@{@item.Name}" class="btn btn-primary fachoose" data-input-id="c-@(item.Name)" data-multiple="@(item.Type == "file" ? "false" : "true")"><i class="fa fa-list"></i> Choose</button></span>
        <span class="msg-box n-right" for="c-@{@item.Name}"></span>
    </div>
    }
    break;
case "switch":
    {
    <input id="c-@{@item.Name}" name="@item.Name" type="hidden" value="@(!string.IsNullOrEmpty(item.Value) && item.Value == "1"?1:0)">
    <a href="javascript:;" data-toggle="switcher" class="btn-switcher" data-input-id="c-@{@item.Name}" data-yes="1" data-no="0">
    <i class="fa fa-toggle-on text-success @(!string.IsNullOrEmpty(item.Value) && item.Value == "1"?"":"fa-flip-horizontal text-gray") fa-2x"></i>
    </a>
    }
    break;
case "bool":
    {
        <label for="@{@item.Name}-yes"><input id="@{@item.Name}-yes" name="@item.Name" type="radio" value="1" @(!string.IsNullOrEmpty(item.Value)? "checked":"") data-tip="@item.Tip" /> Yes</label>
        <label for="@{@item.Name}-no"><input id="@{@item.Name}-no" name="@item.Name" type="radio" value="0" @(!string.IsNullOrEmpty(item.Value)? "checked":"") data-tip="@item.Tip" /> No</label>
    }
    break;
case "city":
    {
    <div style="position:relative">
    <input @item.Extend type="text" name="@item.Name" id="c-@{@item.Name}" value="@item.Value" class="form-control" data-toggle="city-picker" data-tip="@item.Tip" data-rule="@item.Rule" />
    </div>
    }
    break;
                                            }
                                        </div>
                                        <div class="col-sm-4"></div>
                                    </div>

                                </td>
                                 @if(app.Value.AppDebug)
                                {
                                    <td>{@item.Name}</td>
                                    <td>
                                   
                        <a href="javascript:;" class="btn-delcfg text-muted" data-name="@{@item.Name}"><i class="fa fa-times"></i></a>

                                    </td>
                                }
                            </tr>
                            }
                            </tbody>
                            <tfoot>
                            <tr>
                                <td></td>
                                <td>
                                    <div class="layer-footer">
                                        <button type="submit" class="btn btn-primary btn-embossed disabled">OK</button>
                                                <button type="reset" class="btn btn-default btn-embossed">Reset</button>
                                    </div>
                                </td>
                                @if(app.Value.AppDebug)
                                {<td></td>
                                <td></td>
                                }
                            </tr>
                            </tfoot>
                        </table>
                    </form>
                </div>
            </div>
            }
            <div class="tab-pane fade" id="addcfg">
                <form id="add-form" class="form-horizontal" role="form" data-toggle="validator" method="POST" asp-action="add" asp-controller="config">
                    <div class="form-group">
                        <label class="control-label col-xs-12 col-sm-2">Group:</label>
                        <div class="col-xs-12 col-sm-4">
                            <select name="group" class="form-control selectpicker">
                                @foreach (var item in Model)
                                {
                                    <option value="@item.Name" selected="@(item == Model.First())">@item.Title</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-xs-12 col-sm-2">Type:</label>
                        <div class="col-xs-12 col-sm-4">
                            <select name="type" id="c-type" class="form-control selectpicker">
                                 @foreach (var item in typeof(SysConfigDataType).GetProperties())
                                {<option value="@item.GetValue(typeof(SysConfigDataType))!.ToString()" selected="@(item.Name == "String")">@item.Name</option>}
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="name" class="control-label col-xs-12 col-sm-2">Name:</label>
                        <div class="col-xs-12 col-sm-4">
                            <input type="text" class="form-control" id="name" name="name" value="" data-rule="required; length(3~30); remote(/general/config/check)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="title" class="control-label col-xs-12 col-sm-2">Title:</label>
                        <div class="col-xs-12 col-sm-4">
                            <input type="text" class="form-control" id="title" name="title" value="" data-rule="required"/>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="value" class="control-label col-xs-12 col-sm-2">Value:</label>
                        <div class="col-xs-12 col-sm-4">
                            <input type="text" class="form-control" id="value" name="value" value="" data-rule=""/>
                        </div>
                    </div>
                    <div class="form-group hide" id="add-content-container">
                        <label for="content" class="control-label col-xs-12 col-sm-2">Content:</label>
                        <div class="col-xs-12 col-sm-4">
                            <textarea name="content" id="content" cols="30" rows="5" class="form-control" data-rule="required(content)">value1|title1
value2|title2</textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="tip" class="control-label col-xs-12 col-sm-2">Tips:</label>
                        <div class="col-xs-12 col-sm-4">
                            <input type="text" class="form-control" id="tip" name="tip" value="" data-rule=""/>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="rule" class="control-label col-xs-12 col-sm-2">Rules:</label>
                        <div class="col-xs-12 col-sm-4">
                            <div class="input-group pull-left">
                                <input type="text" class="form-control" id="rule" name="rule" value="" data-tip="Refer to Nice validator documentation" />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button">Choose</button>
                                    <ul class="dropdown-menu pull-right rulelist">
                                         @foreach (var item in typeof(SysConfigRegexList).GetProperties())
                                {<li><a href="javascript:;" data-value="@item.Name">@item.GetValue(typeof(SysConfigRegexList))!.ToString()<span class="text-muted">(@item.Name)</span></a></li>}
                                        
                                    </ul>
                                </span>
                            </div>
                            <span class="msg-box n-right" for="rule"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="visible" class="control-label col-xs-12 col-sm-2">Visible condition:</label>
                        <div class="col-xs-12 col-sm-4">
                            <input type="text" class="form-control" id="visible" name="visible" value="" data-rule=""/>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="extend" class="control-label col-xs-12 col-sm-2">Extend:</label>
                        <div class="col-xs-12 col-sm-4">
                            <textarea name="extend" id="extend" cols="30" rows="5" class="form-control" data-tip="" data-rule="required(extend)" data-msg-extend="When the type is custom, the extended attribute cannot be empty"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-xs-12 col-sm-2"></label>
                        <div class="col-xs-12 col-sm-4">
                           @if(!app.Value.AppDebug)
                           {
                                <button type="button" class="btn btn-primary disabled">Only work at development environment</button>
                            }else{
                            <button type="submit" class="btn btn-primary btn-embossed">OK</button>
                            <button type="reset" class="btn btn-default btn-embossed">Reset</button>
                            }
                        </div>
                    </div>

                </form>

            </div>
            <!--@@formatter:on-->
        </div>
    </div>
</div>
